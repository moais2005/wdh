<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta name="Author" content="Юрий Лукач">
<meta name="Description" content="Справочник Веб-разработчика: современные технологии WWW">
<meta name="Keywords" content="WWW, Веб, разработка, программирование, HTML, DHTML, CSS, Java, JavaScript, CGI, PERL, ASP, XML, XSL, VML, VRML">
<title>WDH: Java - Идентификаторы и имена</title>
<link rel="Prev" href="java04.htm" title="Преобразования типов">
<link rel="Next" href="java06.htm" title="Пакеты">
<link rel="Copyright" href="cpyright.htm" title="Сведения об авторских правах">
<link rev="Made" href="mailto:yury@suncloud.ru" title="Обратная связь">
<script type="text/javascript" src="global/load.js"></script>
<script type="text/javascript" src="global/link.js"></script>
</head>

<body onLoad="initDoc(); addBanner(true)">
<table border="0" cellspacing="0" cellpadding="0" width="100%" style="margin: 0">
  <tr><td><div id="divHeader"></div></td></tr>
  <tr><td id="tdBanner" style="text-align: center"><script type="text/javascript">addBanner(false);</script></td></tr>
  <tr><td>

      <p><em>Документ в процессе разработки!</em></p>

      <h2><a name="ref55">Глава 5.5. Идентификаторы и имена</a></h2>

      <h3><a name="ref551">5.5.1. Декларации имен</a></h3>

      <p>Именованными единицами в Java являются пакеты, классы, интерфейсы, члены ссылочных типов (классы, интерфейсы,
        поля и методы), параметры (методов, конструкторов и обработчиков исключений) и локальные переменные. Имена
        в программах могут быть либо простыми, либо составными. <em>Простое имя</em>&nbsp;&#151; это обычный <a href="java02.htm#ref524">идентификатор</a>,
        а <em>составное имя</em>&nbsp;&#151; последовательность идентификаторов, разделенных точками.</p>

      <p>Любое имя перед своим использованием должно быть <em>декларировано</em>. Java допускает декларации
        следующих имен:</p>
      <ul>
        <li>составное имя пакета, указанное в операторе <tt>package</tt>;</li>
        <li>составное имя типа, указанное в операторе <tt>import</tt>;</li>
        <li>имя класса или интерфейса, указанное в определении соответствующего типа;</li>
        <li>имя члена ссылочного типа, который может быть внутренним классом, внутренним интерфейсом, полем или методом;</li>
        <li>имя параметра метода, конструктора класса или обработчика исключений;</li>
        <li>имя локальной переменной, объявленной в блоке или операторе <tt>for</tt>.</li>
      </ul>

      <p><em>Областью видимости</em> декларации является та часть программы, в которой к именованной единице можно
        обращаться, пользуясь ее простым именем. Правила формирования областей видимости для различных имен приводятся
        вслед за их описанием в соответствующих главах этой части.</p>
      <p>Java допускает "затенение имен", т.&nbsp;е. повторное использование ранее декларированного
        имени внутри его области видимости; в этом случае мы вынуждены использовать составное имя для
        обращения к первой из декларированных единиц с этим именем. Рассмотрим такой пример:</p>

      <div class="code">
<pre class="code">class Test {
  static int x = 1;

  public static void main(String[] args) {
    int x = 0;
    System.out.print("x=" + x + ", Test.x=" + Test.x);
  }
}
</pre>
      </div>

      <p>В этом примере содержатся следующие декларации:</p>
      <ul>
        <li>декларация класса <tt>Test</tt>;</li>
        <li>декларация его члена&nbsp;&#151; статической целой переменной <tt>x</tt>;</li>
        <li>декларация его члена&nbsp;&#151; метода <tt>main</tt>;</li>
        <li>декларация параметра <tt>args</tt> метода <tt>main</tt>;</li>
        <li>декларация локальной целой переменной <tt>x</tt> в методе <tt>main</tt>.</li>
      </ul>
      <p>Декларация статической переменной (т.&nbsp;е. переменной класса)имеет своей областью видимости все тело
        этого класса. Иными словами, обычно в теле класса <tt>Test</tt> мы можем обращаться к статической переменной
        <tt>x</tt> по ее простому имени. Однако, в данном случае ее имя "затенено" в теле метода <tt>main</tt> декларацией
        локальной переменной с тем же именем и требует обращения с использованием составного имени. Поэтому наш пример
        напечатает следующую строку:</p>

<pre><samp>x=0, Test.x=1</samp></pre>

    </td></tr>
  <tr><td><div id="divFooter"></div></td></tr>
</table>
</body>
</html>
