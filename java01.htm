<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta name="Author" content="Юрий Лукач">
<meta name="Description" content="Справочник Веб-разработчика: современные технологии WWW">
<meta name="Keywords" content="WWW, Веб, разработка, программирование, HTML, DHTML, CSS, Java, JavaScript, CGI, PERL, ASP, XML, XSL, VML, VRML">
<title>WDH: Java - Введение в язык Java</title>
<link rel="Prev" href="dhtml14.htm" title="Отображение документов в Internet Explorer">
<link rel="Next" href="java02.htm" title="Лексические соглашения">
<link rel="Copyright" href="cpyright.htm" title="Сведения об авторских правах">
<link rev="Made" href="mailto:yury@suncloud.ru" title="Обратная связь">
<script type="text/javascript" src="global/load.js"></script>
<script type="text/javascript" src="global/link.js"></script>
</head>

<body onLoad="initDoc(); addBanner(true)">
<table border="0" cellspacing="0" cellpadding="0" width="100%" style="margin: 0">
  <tr><td><div id="divHeader"></div></td></tr>
  <tr><td id="tdBanner" style="text-align: center"><script type="text/javascript">addBanner(false);</script></td></tr>
  <tr><td>

      <h1><a name="ref5">Часть V.<br>
        Приложения клиента: язык Java</a></h1>

      <p class="epigraph">&quot;То, что не излечивается лекарствами, излечивается ножом;
        то, что не излечивается ножом, излечивается раскаленным железом;
        то, что не излечивается раскаленным железом, следует считать неизлечимым.&quot;</p>

      <p class="epauthor">Гиппократ</p>

      <h2><a name="ref51">Глава 5.1. Введение в язык Java</a></h2>

      <h3><a name="ref511">5.1.1. Что такое Java?</a></h3>

      <p>Java&nbsp;&#151; это мощный язык программирования, разработанный в 1995 г. фирмой Sun Microsystems
        для интерактивного телевидения и управления бытовыми устройствами. Однако, быстрое развитие
        Сети открыло истинное призвание Java&nbsp;&#151; создание небольших программ, называемых аплетами
        (applets), которые могут быть загружены Веб-обозревателем с сервера и исполнены на стороне клиента.
        По ряду причин, подробно рассмотренных ниже, Java стал обязательным атрибутом каждого Веб-сервера
        и каждого Веб-обозревателя, претендующего на соответствие требованиям современности.</p>

      <p>Популярность Java в World Wide Web объясняется тем, что он имеет одно принципиальное отличие
        от всех остальных языков программирования. Как известно, все языки делятся на компилируемые
        и интерпретируемые. Программа на компилируемом языке (например, C++) перед использованием должна
        быть предварительно скомпилирована и собрана в загрузочный модуль в машинных кодах. Такой модуль
        характеризуется высокой скоростью работы, но он жестко привязан к конкретной платформе и конкретной
        операционной системе; для его переноса в другую среду требуется перекомпиляция всей программы.
        Интерпретируемые языки (например, JavaScript, Perl и вообще все сценарные языки) не требуют
        предварительной компиляции, программы на них исполняются интерпретатором, который читает исходный
        текст программы и немедленно его исполняет. Преимуществом таких языков является их гибкость
        и быстрота разработки, а недостатком&nbsp;&#151; низкая скорость работы и полная зависимость
        от исполняющей системы (высокий уровень языка требует высокого уровня исполняющей среды, а это
        всегда приводит к несовместимости).</p>

      <p>Разработчики Java избрали средний путь, который состоит в следующем. Программа на языке Java
        (обычно это файл с расширением .java) компилируется в промежуточный стандартный код, который
        называется байт-кодом (такие файлы имеют расширение .class). Этот код не является машинным языком
        какого-либо конкретного процессора, а специально создан авторами Java; его следует рассматривать
        как язык ассемблера виртуальной Java-машины, не имеющей физической реализации. Для того, чтобы
        скомпилированная Java-программа могла исполняться на конкретном компьютере, на него нужно установить
        программу, интерпретирующую байт-коды Java (обычно эту программу также называют виртуальной
        Java-машиной). Поскольку байт-коды Java&nbsp;&#151; это язык уровня ассемблера, нетрудно добиться
        полной совместимости реализаций виртуальных машин для разных платформ. Описанный процесс графически
        выглядит так:</p>

      <div class="figure"><img src="images/javavm.gif" alt="Этапы исполнения Java-программы"></div>

      <p>В результате мы получаем платформо-независимый язык, программы на котором исполняются
        быстрее, чем на интерпретируемых языках (хотя, конечно, медленнее, чем на языках
        компилируемых, но это неизбежная плата за независимость от платформы). Описанное соотношение
        языков программирования проиллюстрировано на следующем рисунке:</p>

      <div class="figure"><img src="images/javalang.gif" alt="Классификация языков программирования"></div>

      <p>Концепция виртуальной машины имеет ряд следствий, важных для применения Java в Сети.</p>

      <ul>
        <li>Прежде всего, виртуальная машина позволяет решить проблемы безопасности компьютера, на котором
          исполняется Java-программа; последняя видит только виртуальную машину и ничего не знает о
          физической среде исполнения, а, следовательно, мы можем четко определить полномочия данной
          программы по доступу к файлам, каталогам и пр. составляющим операционной среды.</li>
        <li>Поскольку Java-программа хранится в виде байт-кодов, сервер может передать ее на компьютер-клиент,
          а тот немедленно запустить ее исполнение (разумеется, при условии, что на клиенте установлена
          виртуальная Java-машина). Именно так работают аплеты, что и обеспечило их популярность.</li>
        <li>Виртуальная Java-машина устроена так, что позволяет собирать программы по кусочкам во время
          исполнения (это называется динамическим связыванием модулей). Поскольку исполняющая система
          Java содержит помимо самой виртуальной машины большую библиотеку стандартных модулей, динамическое
          связывание позволяет нам передавать по Сети только написанные нами для конкретной задачи модули,
          что резко сокращает объем передаваемой информации.</li>
      </ul>

      <p>Наше описание языка Java соответствует спецификации Java 2, которая является на сегодня базовой
        для существующих реализаций. Описание стандартных пакетов, используемых для создания аплетов,
        соответствует Sun Java SDK 1.3.1, который использовался автором для отладки приведенных ниже примеров.</p>

      <h3><a name="ref512">5.1.2. Обзор языка</a></h3>

      <p>В основу Java был положен синтаксис C++, но в некоторых отношениях эти два языка существенно
        различаются. Можно сказать, что Java представляет собой C++, из которого убраны все потенциально
        опасные конструкции и добавлены несколько идей из других языков программирования. В частности,
        Java не имеет препроцессора, запрещает прямой доступ к памяти и арифметику указателей, не допускает
        переопределения операторов и не поддерживает множественного наследования классов. С другой стороны,
        Java является строготипизированным языком, поддерживает динамическое управление памятью (включая
        сборку мусора) и многопотоковое выполнение программ.</p>

      <p>Java&nbsp;&#151; это объектно-ориентированный язык программирования, основанный на классах.
        <em>Класс</em> Java&nbsp;&#151; это тип данных, состоящий из набора <em>полей</em>,
        т.&nbsp;е. элементов данных, и <em>методов</em>,
        т. е. функций, манипулирующих этими данными. В процессе работы программы создаются <em>объекты</em>,
        т. е. переменные, которые являются экземплярами реализации данного класса. Новые классы описываются
        как наследники существующих классов и тем самым образуют иерархию. Взаимосвязанные наборы классов
        Java объединяются в <em>пакеты</em>, которые являются самостоятельно компилируемыми единицами.</p>

      <h3><a name="ref513">5.1.3. Создание и выполнение Java-программ</a></h3>

      <p>Для создания программ на языке Java необходимо установить на свой компьютер соответствующее
        программное обеспечение. Java 2 SDK корпорации Sun включает в себя компилятор, виртуальную машину,
        библиотеку стандартных классов и несколько полезных утилит. Последнюю версию SDK можно бесплатно загрузить
        с узла <a target="_blank" href="http://java.sun.com/j2se/1.3/index.html">http://java.sun.com/j2se/1.3/index.html</a>
        <img src="images/extref.gif" alt="Внешняя ссылка">.</p>

      <p>Порядок разработки и отладки программы на языке Java таков:</p>

      <ul>
        <li>Исходный текст программы набирается в любом текстовом редакторе и сохраняется в файле с
          расширением .java, например myfile.java.</li>
        <li>Этот файл компилируется командой <code>javac myfile.java</code>. Если компиляция прошла успешно,
          то создается файл байт-кодов myfile.class.</li>
        <li>Файл байт-кодов уже пригоден для исполнения. Если мы написали консольную Java-программу, то он исполняется командой
          <code>java myfile.class</code>, а если Java-аплет, то командой <code>appletviewer myfile.class</code>.</li>
      </ul>

      <p>Отметим, что стандартный дистрибутив Java SDK не содержит интегрированной среды разработки и отладки программ,
        без которой написание Java-аплетов превращается в длинный и нудный процесс. Поэтому для создания сколь-нибудь
        серьезных аплетов вам понадобится интегрированная среда; лучшими (из бесплатных) на сегодня являются
        <a target="_blank" href="http://www.sun.com/forte/ffj/index.html">Forte for Java</a> <img src="images/extref.gif" alt="Внешняя ссылка"> и
        <a target="_blank" href="http://www.borland.com/jbuilder/">Borland JBuilder</a> <img src="images/extref.gif" alt="Внешняя ссылка">.</p>

      <p>После завершения отладки вызов аплета может быть включен в текст HTML-документа и выполнен
        Веб-обозревателем. Этот процесс был описан <a href="html06.htm#applets">ранее</a> и будет более
        подробно рассмотрен в примерах данной части.</p>

    </td></tr>
  <tr><td><div id="divFooter"></div></td></tr>
</table>
</body>
</html>
